(window.webpackJsonp=window.webpackJsonp||[]).push([[49],{883:function(e,n,i){"use strict";i.r(n),i.d(n,"default",(function(){return a}));var t=i(18),r=i.n(t),c=i(22),o=i.n(c),l=(i(0),i(282)),s={};function a(e){var n=e.components,i=o()(e,["components"]);return Object(l.mdx)("wrapper",r()({},s,i,{components:n,mdxType:"MDXLayout"}),Object(l.mdx)("h1",{id:"selenium-docker-service"},"Selenium Docker Service"),Object(l.mdx)("p",null,"The selenium docker service initializes a docker swarm for running functional ",Object(l.mdx)("a",r()({parentName:"p"},{href:"https://webdriver.io/"}),"WebDriverIO")," tests against a containerized ",Object(l.mdx)("a",r()({parentName:"p"},{href:"https://github.com/SeleniumHQ/docker-selenium"}),"selenium docker")," environment."),Object(l.mdx)("p",null,"By default, the selenium grid will be deployed locally on the host machine running on port 4444. Google Chrome and Firefox browsers are available on the grid."),Object(l.mdx)("h2",{id:"installation"},"Installation"),Object(l.mdx)("p",null,"The selenium docker service should be installed as a development dependency."),Object(l.mdx)("pre",null,Object(l.mdx)("code",r()({parentName:"pre"},{className:"language-bash"}),"npm install --save-dev @cerner/terra-functional-testing\n")),Object(l.mdx)("h2",{id:"configuration"},"Configuration"),Object(l.mdx)("p",null,"To use the service it must be added to the services array in the ",Object(l.mdx)("inlineCode",{parentName:"p"},"wdio.conf.js")," file."),Object(l.mdx)("pre",null,Object(l.mdx)("code",r()({parentName:"pre"},{className:"language-js"}),"// wdio.conf.js\nconst SeleniumDockerService = require('@cerner/terra-functional-testing/lib/services/wdio-selenium-docker-service');\n\nexport.config = {\n    // ...\n    services: [\n        [SeleniumDockerService, {\n            // Selenium service options here\n            // ...\n        }]\n    ],\n    // ...\n};\n")),Object(l.mdx)("h2",{id:"options"},"Options"),Object(l.mdx)("h3",{id:"version"},"version"),Object(l.mdx)("p",null,"The docker selenium image version to run tests against."),Object(l.mdx)("p",null,"Type: ",Object(l.mdx)("inlineCode",{parentName:"p"},"string")),Object(l.mdx)("p",null,"Required: ",Object(l.mdx)("inlineCode",{parentName:"p"},"false")),Object(l.mdx)("p",null,"Default: ",Object(l.mdx)("inlineCode",{parentName:"p"},"3.14.0-helium")),Object(l.mdx)("p",null,"Example:"),Object(l.mdx)("pre",null,Object(l.mdx)("code",r()({parentName:"pre"},{className:"language-js"}),"// wdio.conf.js\nconst SeleniumDockerService = require('@cerner/terra-functional-testing/lib/services/wdio-selenium-docker-service');\n\nexport.config = {\n    // ...\n    services: [\n        [SeleniumDockerService, {\n          version: '3.14.0-helium'\n        }]\n    ],\n    // ...\n};\n")))}a.isMDXComponent=!0}}]);